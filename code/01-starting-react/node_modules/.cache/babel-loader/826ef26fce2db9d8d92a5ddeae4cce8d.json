{"ast":null,"code":"var _jsxFileName = \"/Users/dev-yun/Documents/react-practice/code/01-starting-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n/* props\nJS에서 같은 함수에 다른 인자로 호출하는 것처럼, React에서는 같은 컴포넌트에 다른 props를 줘서 컴포넌트를 다룰 수 있다.\n득징\n1. 부모 컴포넌트에서 props key = props value로 자식에게 키와 값을 전달하면, 자식에서는 props로 받아 사용한다.\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [expenses, setExpenses] = useState([]);\n\n  const addExpenseHandler = expense => {\n    console.log(\"In App.js\");\n    console.log(expense);\n    setExpenses([...expense]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fvHkuU2kS79M/KpXWsEK8FpbhGg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Expenses","NewExpense","App","expenses","setExpenses","addExpenseHandler","expense","console","log"],"sources":["/Users/dev-yun/Documents/react-practice/code/01-starting-react/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n/* props\nJS에서 같은 함수에 다른 인자로 호출하는 것처럼, React에서는 같은 컴포넌트에 다른 props를 줘서 컴포넌트를 다룰 수 있다.\n득징\n1. 부모 컴포넌트에서 props key = props value로 자식에게 키와 값을 전달하면, 자식에서는 props로 받아 사용한다.\n\n*/\n\nfunction App() {\n  const [expenses, setExpenses] = useState([]);\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"In App.js\");\n    console.log(expense);\n    setExpenses([...expense]);\n  };\n\n  return (\n    <main>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}></Expenses>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMM,iBAAiB,GAAIC,OAAD,IAAa;IACrCC,OAAO,CAACC,GAAR,CAAY,WAAZ;IACAD,OAAO,CAACC,GAAR,CAAYF,OAAZ;IACAF,WAAW,CAAC,CAAC,GAAGE,OAAJ,CAAD,CAAX;EACD,CAJD;;EAMA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,YAAY,EAAED;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,KAAK,EAAEF;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAfQD,G;;KAAAA,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}