{"ast":null,"code":"var _jsxFileName = \"/Users/dev-yun/Documents/react-practice/code/01-starting-react/src/components/ExpenseItem.js\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\"; // JSX문법 규칙\n\n/*\n1. 항상 하나의 루트 요소를 갖는다. (빈 루트요소, 아무 태그로 감싸기, React hook 사용등이 있다.)\n2. class 대신 className을 사용한다. (class는 다른 예약어로 사용된다.)\n3. {}을 사용해 변수, 상수, 객체, js연산등을 출력할 수 있다.\n4. 함수나 메서드에서 {}을 사용하면 안된다. ()으로 대체\n5. 만약 더 자식 컴포넌트가 없다면(최하위 컴포넌트라면) self-closing 구문으로 작성해도 된다. (<component />)\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem(_ref) {\n  let {\n    title,\n    amount,\n    date\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"expense-item__price\",\n        children: [\"$\", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","ExpenseItem","title","amount","date"],"sources":["/Users/dev-yun/Documents/react-practice/code/01-starting-react/src/components/ExpenseItem.js"],"sourcesContent":["import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\n\n// JSX문법 규칙\n/*\n1. 항상 하나의 루트 요소를 갖는다. (빈 루트요소, 아무 태그로 감싸기, React hook 사용등이 있다.)\n2. class 대신 className을 사용한다. (class는 다른 예약어로 사용된다.)\n3. {}을 사용해 변수, 상수, 객체, js연산등을 출력할 수 있다.\n4. 함수나 메서드에서 {}을 사용하면 안된다. ()으로 대체\n5. 만약 더 자식 컴포넌트가 없다면(최하위 컴포넌트라면) self-closing 구문으로 작성해도 된다. (<component />)\n*/\n\nfunction ExpenseItem({ title, amount, date }) {\n  return (\n    <section className=\"expense-item\">\n      <ExpenseDate date={date} />\n      <article className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <p className=\"expense-item__price\">${amount}</p>\n      </article>\n    </section>\n  );\n}\n\nexport default ExpenseItem;\n"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,WAAT,OAA8C;EAAA,IAAzB;IAAEC,KAAF;IAASC,MAAT;IAAiBC;EAAjB,CAAyB;EAC5C,oBACE;IAAS,SAAS,EAAC,cAAnB;IAAA,wBACE,QAAC,WAAD;MAAa,IAAI,EAAEA;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAS,SAAS,EAAC,2BAAnB;MAAA,wBACE;QAAA,UAAKF;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,SAAS,EAAC,qBAAb;QAAA,gBAAqCC,MAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAVQF,W;AAYT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}