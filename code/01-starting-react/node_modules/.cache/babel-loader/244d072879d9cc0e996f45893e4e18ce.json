{"ast":null,"code":"var _jsxFileName = \"/Users/dev-yun/Documents/react-practice/code/01-starting-react/src/components/Card.js\";\nimport \"./Card.css\";\n/*\nchildren => 범용적인 component로 자식 component를 감쌀때, 자식 component나 요소로 어떤 요소가 들어올지 예상할 수 없을때 사용한다.\n부모 component의 props에 존재하는 children 속성을 사용하여 하위 component나 자식 요소를 받아 사용할 수 있게 된다. \n\n이러한 테크닉을 컴포지션이라고 한다. (children prop)\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Card","props","classes","className","children"],"sources":["/Users/dev-yun/Documents/react-practice/code/01-starting-react/src/components/Card.js"],"sourcesContent":["import \"./Card.css\";\n\n/*\nchildren => 범용적인 component로 자식 component를 감쌀때, 자식 component나 요소로 어떤 요소가 들어올지 예상할 수 없을때 사용한다.\n부모 component의 props에 존재하는 children 속성을 사용하여 하위 component나 자식 요소를 받아 사용할 수 있게 된다. \n\n이러한 테크닉을 컴포지션이라고 한다. (children prop)\n*/\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n"],"mappings":";AAAA,OAAO,YAAP;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASA,IAAT,CAAcC,KAAd,EAAqB;EACnB,MAAMC,OAAO,GAAG,UAAUD,KAAK,CAACE,SAAhC;EACA,oBAAO;IAAK,SAAS,EAAED,OAAhB;IAAA,UAA0BD,KAAK,CAACG;EAAhC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAHQJ,I;AAKT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}